# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  name: JDB-SERVER

variables:
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/') }}:
    branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]

stages:
  - stage: Deploy_Production
    displayName: 'Deploy to production'
    condition: eq(variables['branchName'], 'master')
    jobs:
      - job: 'build'
        displayName: 'Deploy_Production'
        steps:
          - task: Gradle@2
            inputs:
              workingDirectory: ''
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.17'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: false
              testResultsFiles: '**/TEST-*.xml'
              tasks: 'clean build'
          - task: CopyFiles@2
            inputs:
              contents: 'build/libs/*.jar'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'cuentas-backend-prod'
              publishLocation: 'Container'